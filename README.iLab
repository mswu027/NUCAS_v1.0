#======================================================================
#
#   file:               README.iLab
#
#   purpose:            brief description of the data assimilation package
#                       around BEPS, serial version.
#
#   created:            2020/04
#   last:               2022/07
#
#   author:             Michael Vossbeck and Thomas Kaminski (The Inversion Lab)
#
#======================================================================

General remarks:
------------------------------------------
- the package is prepared for building and running the serial version
  of the BEPS model, its derivative codes and the data assimilation system on
  a linux computer. It includes:
  - Fortran source files providing the BEPS model
    including the tangent-linear (multi-directional) and the adjoint derivative codes
  - Drivers for generation of pseudo observations, Jacobians and running data
    assimilation experiments
- the basic structure of the original BEPS package (as provided by MSWU) was preserved
  as far as possible, but some changes were applied.
  These include the following subdirectories:
  - bld:
    - bld/prepare_case.sh
      - use this bash script (see also below) to prepare a new BEPS experiment
        (instead of original csh script scripts/create_newcase_assim)
    - bld/beps_build_nml.sh
      - shell script (invoked by prepare_case.sh) to create namelist file for running
        BEPS (original script 'models_assim/beps_build_control' is not used anymore)
    - bld/Makefile.org
      - original Makefile in BEPS package provided by MSWU
  - models_assim/iLab
    - Fortran source files for the assimilation environment, the interfaces to the BEPS model,
      and the derivative codes
  - models_assim/iLab/driver
    - Fortran driver files to run the BEPS model, build its Jacobian, and run
      assimilation experiments
  - models_assim/iLab/adsupportlib
    - memory managment utilities required by the adjoint code
  - models_assim/iLab/nr
    - placeholder directory containing a Makefile with instructions on
      how to build the Numerical Recicpes library within the system. The actual
      source files cannot be delivered with the package for licensing reasons.
      Check http://numerical.recipes
  - scripts:
    - scripts/beps_inspect.py
      - basic python3 script to be used for comparison of BEPS NetCDF output
        from two different experiments or ASCII files containing Jacobian matrices.
  - pkg_test_iLab:
    - reference results of predefined experiments generated on iLab platform.


Assimilation setup:
------------------------------------------
The assimilation system is prepared for the control vector with 97 elements and 3 target
variables (SIF, Thetam, COS_flux).
Some settings of the system are hard-wired in the source code files and
must be adapted explicitly on demand.
- The length of the simulation vector is limited by the constant 'mmax' in file obs.f90,
  and is sufficient for the 3 simulated variables over
  500 land points and 730 days (of hourly simulation).
  This limit must be updated in file
  - models_assim/iLab/obs.f90 ("mmax = nday_max*24*nlp_max*nsimvar")
- pseudo- and real observations of SIF, Thetam, and COS flux are read from file 'obs.nc'
  found in current working directory of the assimilation experiment
  (if no such file is found the observational vector will be uniformly set to zero
   with uncertainties of 1).
  An example illustrating the expected format is here: pkg_test_iLab/twin/obs.nc
  (for convenience, an example ncdump is shown further below).
  in particular  names of dimensions and variables must comply with the convention used there.
  Note also, that the observations must cover the complete temporal range of the simulation setup,
  missing observations must be filled with missing_value=-99999.
  In addition the number of land points must be consistent with the simulation setup,
  while it is *not* checked whether the spatial coordinates are all equal.
- In the form that is delivered the use of prior information is deactivated,
  such that a demonstration with synthetic data can be performed.
  This can be changed by activating the mask in file
  - models_assim/iLab/getprior.f90 ("!  mask = .true. ! activate prior in setup with real data")
- by default the driver for the optimisation (rundfprv.f90) will run an assimilation experiment
  with the prior-term activated in the cost function and will start from the prior control vector.
  However the initial control vector will be read from file 'x.b' (Fortran binary format)
  if this is present in the experiment directory.

- ncdump of obs.nc suitable for the assimilation system:
netcdf obs {
dimensions:
        nlp = 2 ;
        time = 384 ;
        ntc = 4 ;
variables:
        int yyyymmddss(time, ntc) ;
                yyyymmddss:comment = "year/month/day/time-of-day[s]" ;
        double lon(nlp) ;
                lon:long_name = "longitude" ;
                lon:units = "degrees_east" ;
        double lat(nlp) ;
                lat:long_name = "latitude" ;
                lat:units = "degrees_north" ;
        double sif(time, nlp) ;
                sif:long_name = "Solar induced fluorescence" ;
                sif:units = "mW/m2/nm/sr" ;
                sif:missing_value = -99999. ;
        double sif_unc(time, nlp) ;
                sif_unc:long_name = "Uncertainty of Solar induced fluorescence" ;
                sif_unc:units = "mW/m2/nm/sr" ;
                sif_unc:missing_value = -99999. ;
        double sm(time, nlp) ;
                sm:long_name = "fractional surface layer soil moisture" ;
                sm:units = "" ;
                sm:missing_value = -99999. ;
        double sm_unc(time, nlp) ;
                sm_unc:long_name = "Uncertainty of fractional surface layer soil moisture" ;
                sm_unc:units = "" ;
                sm_unc:missing_value = -99999. ;
        double COS_flux(time, nlp) ;
                COS_flux:long_name = "COS flux for soil and plant" ;
                COS_flux:units = "pmol/m2/s" ;
                COS_flux:missing_value = -99999. ;
        double COS_flux_unc(time, nlp) ;
                COS_flux_unc:long_name = "Uncertainty of COS flux for soil and plant" ;
                COS_flux_unc:units = "pmol/m2/s" ;
                COS_flux_unc:missing_value = -99999. ;
}


Instructions for running predefined experiments:
------------------------------------------
The script 'bld/prepare_case.sh' is used to prepare new BEPS experiments,
invocation with option '-h' lists available predefined tests and further options to configure the experiment. Examples of it's usage are shown below.

- bld/prepare_case.sh --org --initial_yyyymmdd 20130616 --ndays 16 --nlp 1 --filename_prefixes FI_Hyy_LAI_2013_2017 FI_Hyy_boundary FI_Hyy_meteo_2013_2017 --expdir pkg_test/bepsorg
  - run the original BEPS driver,
    generated NetCDF output files will reside in pkg_test/bepsorg/output
- bld/prepare_case.sh --runsimobs --initial_yyyymmdd 20130616 --ndays 16 --nlp 1 --filename_prefixes FI_Hyy_LAI_2013_2017 FI_Hyy_boundary FI_Hyy_meteo_2013_2017 --expdir pkg_test/simobs
  - run BEPS simulation driver with the prior/default parameters,
    creates NetCDF output similar to original driver and pseudo observations (file obs.nc)
- bld/prepare_case.sh --twin --diable_prior --runc 0.5 --pert 0.2 --initial_yyyymmdd 20130616 --ndays 16 --nlp 1 --filename_prefixes FI_Hyy_LAI_2013_2017 FI_Hyy_boundary FI_Hyy_meteo_2013_2017 --expdir pkg_test/twin
  - run an identical-twin experiment.
    - In a first step pseudo-observations are generated (file obs.nc),
      which are used in a subsequent assimilation experiment to recover the default parameters from
      parameters perturbed by 20%.
    - Note, that the assimilation driver must be linked against the
      Numerical Recipes library, with must have the name 'libnr-$(FC).a' where FC is the
      name of the compiler (e.g. gfortran).
      This can be achieved by
      - providing a fully qualified path to an already existing library and adding the option
        --nrlib /path/to/libnr-$(FC).a or
      - adding the relevant NR library source files to directory models_assim/iLab/nr
        (libnr-$(FC).a will then be built automatically).
- bld/prepare_case.sh --jacfwv --expdir pkg_test/jacfwv
  - compute the Jacobian of the BEPS model at the prior control vector
    and write to ASCII/binary file.
- bld/prepare_case.sh --assim_obs ../../inputdata/beps_site/FI-Hyy_tst-obs-iLab.nc --initial_yyyymmdd 20130616 --ndays 16 --nlp 1 --filename_prefixes FI_Hyy_LAI_2013_2017 FI_Hyy_boundary FI_Hyy_meteo_2013_2017 --pert 0 --nrlib /path/to/libnr-$(FC).a --expdir pkg_test/tst-assim_FI-Hyy_20130616-d16
  - run a "real" data assimilation experiment with (pseudo-) observational data file
    inputdata/beps_site/FI-Hyy_tst-obs-iLab.nc

By default, the predefined tests are run for a 16 day simulation period mid of June 2016.
For comparison purposes, reference output generated on the iLab platform is provided
with the package in directories pkg_test_iLab/besporg, pkg_test_iLab/twin, pkg_test_iLab/jacfwv,
and pkg_test_iLab/tst-assim_FI-Hyy_20130616-d16.
